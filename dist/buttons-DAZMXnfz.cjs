"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("vue"),a=o.defineComponent({__name:"buttons",props:{disabled:{type:Boolean},isSelected:{type:Boolean},hasAddons:{type:Boolean},align:{},processing:{type:Boolean},isSmall:{type:Boolean},isMedium:{type:Boolean},isLarge:{type:Boolean},is1:{type:Boolean},is2:{type:Boolean},is3:{type:Boolean},is4:{type:Boolean},is5:{type:Boolean},is6:{type:Boolean},is7:{type:Boolean},is8:{type:Boolean},is9:{type:Boolean},is10:{type:Boolean},is11:{type:Boolean},is12:{type:Boolean},isNarrow:{type:Boolean},isSuccess:{type:Boolean},isWarning:{type:Boolean},isDanger:{type:Boolean},isInfo:{type:Boolean},isOutlined:{type:Boolean},isLink:{type:Boolean},isInverted:{type:Boolean},isRounded:{type:Boolean},isPrimary:{type:Boolean},icon:{},iconType:{},iconPack:{},textIcon:{type:Boolean},leftIcon:{},iconClasses:{},leftIconType:{},rightIcon:{}},setup(s){const n=s,t=o.computed(()=>{const e=[];return n.hasAddons&&e.push("has-addons"),n.align&&e.push(`is-${n.align}`),n.isRounded&&e.push("is-rounded"),e});return(e,l)=>(o.openBlock(),o.createElementBlock("div",{class:o.normalizeClass(["buttons",t.value])},[o.renderSlot(e.$slots,"default")],2))}});exports.default=a;
